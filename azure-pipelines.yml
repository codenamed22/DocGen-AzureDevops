# Python package
- task: XplatGenerateReleaseNotes@3
  inputs:
    outputfile: '$(System.DefaultWorkingDirectory)\releasenotes.md'
    templateLocation: 'InLine'
    inlinetemplate: |
      # RELEASENOTES
      
      **Release Name** :  ${releaseDetails.releaseDefinition.name}
      **Release Number** : ${releaseDetails.name}
      **Release Completed** : ${releaseDetails.modifiedOn}
      **Compared Release Number** : ${compareReleaseDetails.name}
      **Build Number** - $(Build.BuildNumber) 
      **Build Id** - $(Build.DefinitionId) 
      **Build Source Branch** - $(Build.SourceBranchName) 
      **Build Type** - $(Build.Type)
    dumpPayloadToConsole: false
    dumpPayloadToFile: false
    replaceFile: true
    getParentsAndChildren: False
    getAllParents: False
    getIndirectPullRequests: False
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python27:
      python.version: '2.7'
    Python35:
      python.version: '3.5'
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'
